/**
 * 
 */
package cn.itcast.core.service.product;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.sun.tools.javac.util.List;

import cn.itcast.common.page.Pagination;
import cn.itcast.core.bean.product.Color;
import cn.itcast.core.bean.product.ColorQuery;
import cn.itcast.core.bean.product.ProductQuery;
import cn.itcast.core.bean.product.ProductQuery.Criteria;
import cn.itcast.core.dao.product.ColorDao;
import cn.itcast.core.dao.product.ProductDao;

/**
 * 商品
 * @author bobo
 *
 */
@Service("productService")
@Transactional
public class ProductServiceImpl implements ProductService{
    @Autowired
    private ProductDao productDao;
    
    //分页对象
    public Pagination selectPagination(Integer pageNo,String name,Long brandId, Boolean isShow){
	
	ProductQuery productQuery = new ProductQuery();
	productQuery.setPageNo(Pagination.cpn(pageNo));
	productQuery.setPageSize(10);
	
	Criteria createCriteria = productQuery.createCriteria();
	
	StringBuilder params = new StringBuilder();
		
	
	if(null != name){
	    createCriteria.andNameLike("%" + name + "%");
	    params.append("name="  ).append(name);
	}
	if(null != brandId){
	    createCriteria.andBrandIdEqualTo(brandId);
	    params.append("&brandId="  ).append(brandId);
	}
	if(null != isShow){
	    createCriteria.andIsShowEqualTo(isShow);
	    params.append("&isShow="  ).append(isShow);
	}else{
	    createCriteria.andIsShowEqualTo(false);
	    params.append("&isShow="  ).append(false);
	}
	
	
	Pagination pagination = new Pagination(
			productQuery.getPageNo(),
			productQuery.getPageSize(),
			productDao.countByExample(productQuery),
			productDao.selectByExample(productQuery) //分页的list数据
		);
	
	
	
	String url = "/product/list.do";
	pagination.pageView(url, params.toString());
	
	
	return pagination;
	
    }
    
    //加载颜色
    @Autowired
    private ColorDao colorDao;
    
    //颜色结果集
    public List<Color> selectColorList(){
	ColorQuery colorQuery = new ColorQuery();
	colorQuery.createCriteria().andParentIdNotEqualTo(0L);
	
	return (List<Color>) colorDao.selectByExample(colorQuery);
    }

}
